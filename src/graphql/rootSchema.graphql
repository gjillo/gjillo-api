type Query {
    "Basic projects information"
    projects: [Project!]!

    "Detailed project information"
    project(projectUuid: UUID!): ProjectDetails

    "User information"
    user(userUuid: UUID!): User

    "Detailed card information"
    card_details(cardUuid: UUID!): CardDetails
}

type Mutation {
    "Mutations related to projects"
    projects: ProjectsMutation!

    "Mutations related to users"
    users: UsersMutation!

    "Mutations related to cards"
    cards: CardsMutation!
}

type Subscription {
    "Card details updated"
    card_details_updated: Card!

    "Card field updated"
    card_field_updated: Card!

    "Project created"
    project_created: Project!

    "Project updated"
    project_updated: Project!

    "User added to project"
    project_user_added: Project!

    "User removed from project"
    project_user_removed: Project!

    "Column created"
    column_created: Column!

    "Column updated"
    column_updated: Column!

    "Card added to column"
    column_card_added: Column!

    "Card removed from column"
    column_card_removed: Column!
}